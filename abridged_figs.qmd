---
format: 
  html:
    self-contained: true
editor: visual
params: 
  species_code: 20006
  survey_definition_id: 47
  area_id: 99903
---

GAP products biomass & sample size synopsis for `r params$species_code`

```{r include=FALSE}
library(egg)
library(tidyverse)
library(akfingapdata)
library(akgfmaps)
library(keyring)
#library(gfplot)
library(akmarineareas2)
library(sf)
library(FSA)
library(classInt)

options(scipen = 999)

  # define token for pulling gap data from akfin api
token <-create_token("callahan_akfin_api")

get_gap_data <- function(species_code=NA, 
                         survey_definition_id=NA, 
                         area_id=NA,
                         start_year=NA,
                         end_year=3000) {
  
  token <- create_token("callahan_akfin_api")
  
  sc<-species_code
  taxa <- get_gap_taxonomic_classification()%>%
    filter(species_code==sc)
  
  common_name<-taxa$common_name
  scientific_name <- taxa$species_name
  
  # region for akgfmaps
  region <- ifelse(survey_definition_id==47, "goa",
                   ifelse(survey_definition_id==98, "bs.south",
                          ifelse(survey_definition_id==52, "ai",NA)))
  # pull biomass 
  gap_biomass <- get_gap_biomass(survey_definition_id = survey_definition_id,
                                 area_id = area_id,
                                 species_code = species_code,
                                 start_year = start_year,
                                 end_year = end_year)
  
  # pull sizecomp  

  # pull agecomps

  # pull specimen data
  gap_specimen <- get_gap_specimen(survey_definition_id = survey_definition_id,
                                   species_code = species_code,
                                   start_year = start_year,
                                   end_year = end_year)
  # pull length frequencies
  gap_length <- get_gap_length(survey_definition_id = survey_definition_id,
                               species_code = species_code,
                               start_year = start_year,
                               end_year = end_year)
  # CPUE
  gap_cpue <- akfingapdata::get_gap_cpue(survey_definition_id = survey_definition_id,
                                         species_code = species_code,
                                         start_year = start_year,
                                         end_year = end_year)
  
  # haul
  #gap_haul <- get_gap_haul()
  #saveRDS(gap_haul, "gap_haul.RDS")
  gap_haul<-readRDS("gap_haul.RDS")
  
  # make data available in the global environment
  gap_data <- list(common_name=common_name,
                   scientific_name=scientific_name,
                   region=region,
                   gap_biomass=gap_biomass,
                   #gap_sizecomp=gap_sizecomp,
                   #gap_age=gap_age,
                   gap_specimen=gap_specimen,
                   gap_length=gap_length,
                   gap_cpue=gap_cpue,
                   gap_haul=gap_haul)
  #return(gap_data)
  for (name in names(gap_data)) {
    assign(name, gap_data[[name]], envir = .GlobalEnv)
  }
  
}

#source("R/get_gap_data.R")
source("R/plot_biomass.R")
source("R/plot_idw_last_three_years.R")
source("R/plot_sample_size.R")

get_gap_data(species_code=params$species_code, 
                  survey_definition_id=params$survey_definition_id, 
                  area_id=params$area_id,
                  start_year=1982,
                  end_year=3000)

# region specific chunk sizing
std <- 1
tall <- 1.2
taller <- 1.5
tallest <-2.5

```

```{r fig1, echo=FALSE, message=FALSE, warning=FALSE}
plot_biomass()
```

```{r include=FALSE}
idw_plot<-plot_idw_last_three_years()
```

```{r fig6, echo=FALSE, message=FALSE, warning=FALSE, fig.asp=ifelse(params$survey_definition_id==98, tallest, taller)}
idw_plot
```

```{r fig7, echo=FALSE, message=FALSE, warning=FALSE, fig.asp=ifelse(params$survey_definition_id==98, tall, std)}
plot_sample_size()
```

<https://github.com/MattCallahan-NOAA/gapproductssynopsis>
