---
format: 
  html:
    self-contained: true
editor: visual
params: 
  species_code: 20006
  survey_definition_id: 47
  area_id: 99903
---

GAP products biomass & sample size synopsis for `r params$species_code`

```{r include=FALSE}
library(egg)
library(tidyverse)
library(akfingapdata)
library(akgfmaps)
library(keyring)
library(gfplot)
library(akmarineareas2)
library(sf)
library(FSA)
library(classInt)

options(scipen = 999)

  # define token for pulling gap data from akfin api
token <-create_token("akfin_secret")

generate_synopsis_abridged <- function(species_code=NA, 
                              survey_definition_id=47, 
                              area_id=99903,
                              start_year=1990,
                              end_year=3000) {
  # define species common name
  sc<-species_code
  taxa <- get_gap_taxonomic_classification()%>%
    filter(species_code==sc)
  
  common_name<-taxa$common_name
  scientific_name <- taxa$species_name
  
  
  # pull biomass 
  gap_biomass <- get_gap_biomass(survey_definition_id = survey_definition_id,
                                 area_id = area_id,
                                 species_code = species_code,
                                 start_year = start_year,
                                 end_year = end_year)
  
    # pull specimen data
  gap_specimen <- get_gap_specimen(survey_definition_id = survey_definition_id,
                                   species_code = species_code,
                                   start_year = start_year,
                                   end_year = end_year)
  
### plot biomass ####
  biomass_plot <- ggplot(data=gap_biomass)+
    geom_ribbon(aes(x=year, 
                    ymin=biomass_mt-sqrt(biomass_var),
                    ymax=biomass_mt+sqrt(biomass_var)), fill="lightgray")+
    geom_line(aes(x=year, y=biomass_mt))+
    geom_point(aes(x=year, y=biomass_mt))+
    ylab("Biomass (mt)")+
    theme_bw()
  
  gap_length <- get_gap_length(survey_definition_id = survey_definition_id,
                               species_code = species_code,
                               start_year = start_year,
                               end_year = end_year)
  
# 
#   length_count <- gap_length %>%
#     group_by(year) %>%
#     summarize(n_samples=sum(frequency))%>%
#     mutate(sample_type = "length")
#   weight_count <- gap_specimen %>%
#     filter(weight_g > 0) %>%
#     group_by(year) %>%
#     summarize(n_samples=n())%>%
#     mutate(sample_type = "weight")
#   if(any(!is.na(gap_specimen$age))) {
#     age_count <-gap_specimen %>%
#       filter(age > 0) %>%
#       group_by(year) %>%
#       summarize(n_samples=n())%>%
#       mutate(sample_type = "age") }
#   else {
#     age_count<-gap_specimen %>%
#       group_by(year) %>%
#       summarize() %>%
#       mutate(n_samples=0,
#              sample_type = "age")
#   }
#   biodata_count <-length_count %>%
#     bind_rows(weight_count) %>%
#     bind_rows(age_count) %>%
#     arrange(year) %>%
#     mutate(sample_type=factor(sample_type, levels=c("length", "weight", "age")))
# 
#   min_break<-min(biodata_count$year)
#   max_break<-max(biodata_count$year)
# 
#   sample_size_plot<-ggplot(data=biodata_count)+
#     geom_text(aes(x=sample_type, y=year, label=n_samples))+
#     scale_y_continuous(breaks=seq(min_break, max_break, by=1))+
#     xlab("")+ylab("")+
#     ggtitle("sample sizes")+
#     theme_bw()+
#     theme(panel.grid.minor = element_blank(),
#           panel.grid.major.x=element_blank())
# 
#   return(list(biomass_plot, sample_size_plot))
  #return(list(biomass_plot))
}

gp<-generate_synopsis_abridged(species_code=params$species_code, 
                  survey_definition_id=params$survey_definition_id, 
                  area_id=params$area_id,
                  start_year=1990,
                  end_year=3000)

```

```{r fig1, echo=FALSE, message=FALSE, warning=FALSE}
print(gp[1])
```

```{r fig2, echo=FALSE, message=FALSE, warning=FALSE}
print(gp[2])
```
